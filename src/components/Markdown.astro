---
import { Marked } from 'marked';
import markedShiki from 'marked-shiki';
import { createHighlighter } from 'shiki';

export interface Props {
    content: string;
    class?: string;
}

const { content, class: className = '' } = Astro.props;

// `createHighlighter` is async, it initializes the internal and
// loads the languages and themes specified.
// Then later you can use `highlighter.codeToHtml` synchronously
// with the loaded themes and languages.
const highlighter = await createHighlighter({
    langs: ['jsx', 'js'],
    themes: ['min-dark']
});
const marked = new Marked();
const html = await marked
    .use(
        markedShiki({
            highlight(code: string, lang: string, props: any) {
                return highlighter.codeToHtml(code, {
                    lang,
                    theme: 'min-dark'
                });
            }
        })
    )
    .parse(content || '');
---

<div class={`markdown-content ${className}`}>
    <Fragment set:html={html} />
</div>

<style>
    .markdown-content {
        /* Add your markdown styling here */
        line-height: 1.6;
    }

    .markdown-content h1,
    .markdown-content h2,
    .markdown-content h3 {
        margin-top: 1.5rem;
        margin-bottom: 1rem;
    }

    .markdown-content p {
        margin-bottom: 1rem;
    }

    .markdown-content ul,
    .markdown-content ol {
        margin-left: 2rem;
        margin-bottom: 1rem;
    }
</style>
