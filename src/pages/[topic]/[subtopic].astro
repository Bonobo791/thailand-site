---
import Layout from '../../layouts/Layout.astro';
import ContextAlert from '../../components/ContextAlert.astro';
import Markdown from '../../components/Markdown.astro';
import { getCollection } from 'astro:content';

export async function getStaticPaths() {
    const allPosts = await getCollection('blog');

    // Generate paths for subtopics
    const subtopicPaths = [];

    // Extract all unique topics
    const topics = [...new Set(allPosts.map((post) => post.data.topic))];

    // For each topic, create subtopic pages
    topics.forEach((topic) => {
        const topicPosts = allPosts.filter((post) => post.data.topic === topic);

        // Get subtopics for this topic
        const subtopics = [...new Set(topicPosts.filter((post) => post.data.subtopic).map((post) => post.data.subtopic))];

        // Create subtopic pages
        subtopics.forEach((subtopic) => {
            const subtopicPosts = topicPosts.filter((post) => post.data.subtopic === subtopic);
            subtopicPaths.push({
                params: { topic, subtopic },
                props: {
                    topic,
                    subtopic,
                    posts: subtopicPosts
                }
            });
        });
    });

    return subtopicPaths;
}

const { topic, subtopic, posts } = Astro.props;

// Sort posts by date (most recent first)
const sortedPosts = posts.sort((a, b) => b.data.date.getTime() - a.data.date.getTime());

const explainer = `# ${subtopic}
  
Posts in the ${subtopic} subtopic of ${topic}.`;
---

<Layout title={`${subtopic} - ${topic}`}>
    <ContextAlert class="mb-4" />
    <div class="mb-6 flex flex-wrap gap-4">
        <a href="/" class="inline-flex items-center">
            <span class="mr-2">←</span> All topics
        </a>

        <a href={`/${topic}`} class="inline-flex items-center">
            <span class="mr-2">←</span> Back to {topic}
        </a>
    </div>

    <h1 class="mb-8">
        <span class="text-neutral-500">{topic} &gt; </span>
        {subtopic.charAt(0).toUpperCase() + subtopic.slice(1)}
    </h1>

    <Markdown content={explainer} class="mb-10" />

    {/* Posts List */}
    {
        sortedPosts.length > 0 ? (
            <div class="grid gap-8 md:grid-cols-2">
                {sortedPosts.map((post) => (
                    <a href={`/post/${post.slug}`} class="no-underline">
                        <div class="bg-white text-neutral-700 rounded-lg overflow-hidden transition-transform hover:scale-[1.02]">
                            <div class="p-6">
                                <p class="text-neutral-500 text-sm mb-2">{post.data.date.toLocaleDateString()}</p>
                                <h2 class="text-xl font-bold text-neutral-900 mb-2">{post.data.title}</h2>
                                <p class="line-clamp-3">{post.data.description}</p>

                                {post.data.tags && (
                                    <div class="flex flex-wrap gap-1 mt-3">
                                        {post.data.tags.map((tag) => (
                                            <span class="bg-neutral-100 text-xs px-2 py-1 rounded">{tag}</span>
                                        ))}
                                    </div>
                                )}
                            </div>
                        </div>
                    </a>
                ))}
            </div>
        ) : (
            <div class="bg-white text-neutral-700 rounded-lg p-6">
                <p>No posts found in this subtopic.</p>
            </div>
        )
    }
</Layout>

