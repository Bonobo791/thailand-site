---
import Layout from '../../layouts/Layout.astro';
import ContextAlert from '../../components/ContextAlert.astro';
import { getCollection } from 'astro:content';

// Generate a path for each blog post
export async function getStaticPaths() {
    const blogEntries = await getCollection('blog');
    return blogEntries.map((entry) => ({
        params: { slug: entry.slug },
        props: { entry }
    }));
}

const { entry } = Astro.props;
const { Content } = await entry.render();

const { topic, subtopic } = entry.data;
---

<Layout title={entry.data.title}>
    <ContextAlert class="mb-4" />
    <div class="mb-6 flex flex-wrap gap-4">
        <a href="/blog" class="inline-flex items-center">
            <span class="mr-2">←</span> All topics
        </a>

        <a href={`/blog/topic/${topic}`} class="inline-flex items-center">
            <span class="mr-2">←</span>
            {topic}
        </a>

        {
            subtopic && (
                <a href={`/blog/topic/${topic}/${subtopic}`} class="inline-flex items-center">
                    <span class="mr-2">←</span> {subtopic}
                </a>
            )
        }
    </div>

    <div class="bg-white rounded-lg p-8 text-neutral-700">
        <div class="mb-6">
            <div class="mb-3">
                <a href={`/blog/topic/${topic}`} class="text-sm text-neutral-500 hover:underline mr-2">
                    {topic}
                </a>
                {
                    subtopic && (
                        <>
                            <span class="text-neutral-300 mx-1">›</span>
                            <a href={`/blog/topic/${topic}/${subtopic}`} class="text-sm text-neutral-500 hover:underline">
                                {subtopic}
                            </a>
                        </>
                    )
                }
            </div>

            <p class="text-neutral-500 mb-2">{entry.data.date.toLocaleDateString()}</p>
            <h1 class="text-3xl font-bold text-neutral-900">{entry.data.title}</h1>

            {
                entry.data.tags && (
                    <div class="flex flex-wrap gap-2 mt-4">
                        {entry.data.tags.map((tag) => (
                            <span class="bg-neutral-100 px-2 py-1 rounded text-sm">{tag}</span>
                        ))}
                    </div>
                )
            }
        </div>

        <div class="prose max-w-none">
            <Content />
        </div>
    </div>
</Layout>
