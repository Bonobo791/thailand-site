---
import Layout from '../layouts/Layout.astro';
import ContextAlert from '../components/ContextAlert.astro';
import Markdown from '../components/Markdown.astro';
import { getCollection } from 'astro:content';

// Get all pages
const allPages = await getCollection('pages');

// Extract topics from directory structure
const topicsMap = new Map<string, Set<string>>();

allPages.forEach((page) => {
    const pathParts = page.slug.split('/');

    if (pathParts.length > 0) {
        const topic = pathParts[0];
        const subtopic = pathParts.length > 1 ? pathParts[1] : null;

        if (!topicsMap.has(topic)) {
            topicsMap.set(topic, new Set<string>());
        }

        if (subtopic) {
            topicsMap.get(topic)!.add(subtopic);
        }
    }
});

// Convert the Map to an array of objects for easier template rendering
const topics = Array.from(topicsMap.entries()).map(([topicName, subtopics]) => ({
    name: topicName,
    subtopics: Array.from(subtopics)
}));

// Featured pages (if any)
const featuredPages = allPages.filter((page) => page.data.featured);

const explainer = `
# Welcome to our Content Hub

Browse topics and pages organized by subject areas and categories.
`;
---

<Layout title="Content Hub">
    <ContextAlert message="Welcome to the content hub" class="mb-4" />
    <h1 class="mb-8">Topics</h1>
    <Markdown content={explainer} class="mb-10" />

    {/* Topics List */}
    <div class="grid gap-8 md:grid-cols-2 lg:grid-cols-3 mb-16">
        {
            topics.map((topic) => (
                <div class="bg-white text-neutral-700 rounded-lg overflow-hidden">
                    <div class="p-6">
                        <h2 class="text-xl font-bold text-neutral-900 mb-3">
                            <a href={`/${topic.name}`} class="hover:underline">
                                {topic.name.charAt(0).toUpperCase() + topic.name.slice(1)}
                            </a>
                        </h2>

                        {topic.subtopics.length > 0 && (
                            <div class="mb-4">
                                <p class="text-sm text-neutral-500 mb-2">Subtopics:</p>
                                <div class="flex flex-wrap gap-1">
                                    {topic.subtopics.map((subtopic) => (
                                        <a href={`/${topic.name}/${subtopic}`} class="text-xs px-2 py-1 bg-neutral-100 rounded-full hover:bg-neutral-200">
                                            {subtopic}
                                        </a>
                                    ))}
                                </div>
                            </div>
                        )}

                        <a href={`/${topic.name}`} class="text-sm text-primary hover:underline">
                            View all pages →
                        </a>
                    </div>
                </div>
            ))
        }
    </div>

    {/* Featured Pages Section (if any) */}
    {
        featuredPages.length > 0 && (
            <div class="mb-16">
                <h2 class="text-2xl font-bold mb-6">Featured Pages</h2>
                <div class="grid gap-8 md:grid-cols-2">
                    {featuredPages.map((page) => {
                        const pathParts = page.slug.split('/');
                        const topic = pathParts[0];
                        const subtopic = pathParts.length > 1 ? pathParts[1] : null;

                        return (
                            <a href={`/${page.slug}`} class="no-underline">
                                <div class="bg-white text-neutral-700 rounded-lg overflow-hidden transition-transform hover:scale-[1.02]">
                                    <div class="p-6">
                                        <p class="text-neutral-500 text-sm mb-2">
                                            {page.data.lastUpdated?.toLocaleDateString() || ''}
                                            {topic && ` | ${topic}`}
                                            {subtopic && ` › ${subtopic}`}
                                        </p>
                                        <h3 class="text-xl font-bold text-neutral-900 mb-2">{page.data.title}</h3>
                                        <p class="line-clamp-3">{page.data.description}</p>
                                    </div>
                                </div>
                            </a>
                        );
                    })}
                </div>
            </div>
        )
    }

    {/* Recent Pages */}
    <div>
        <h2 class="text-2xl font-bold mb-6">Recently Updated Pages</h2>
        <div class="grid gap-8 md:grid-cols-2 lg:grid-cols-3">
            {
                allPages
                    .filter((page) => page.data.lastUpdated)
                    .sort((a, b) => (b.data.lastUpdated?.getTime() || 0) - (a.data.lastUpdated?.getTime() || 0))
                    .slice(0, 6)
                    .map((page) => {
                        const pathParts = page.slug.split('/');
                        const topic = pathParts[0];
                        const subtopic = pathParts.length > 1 ? pathParts[1] : null;

                        return (
                            <a href={`/${page.slug}`} class="no-underline">
                                <div class="bg-white text-neutral-700 rounded-lg overflow-hidden transition-transform hover:scale-[1.02]">
                                    <div class="p-6">
                                        <p class="text-neutral-500 text-sm mb-2">
                                            {page.data.lastUpdated?.toLocaleDateString() || ''}
                                            {topic && ` | ${topic}`}
                                            {subtopic && ` › ${subtopic}`}
                                        </p>
                                        <h3 class="text-lg font-bold text-neutral-900 mb-2">{page.data.title}</h3>
                                        <p class="line-clamp-2 text-sm">{page.data.description}</p>
                                    </div>
                                </div>
                            </a>
                        );
                    })
            }
        </div>
    </div>
</Layout>
