---
import Layout from '../layouts/Layout.astro';
import ContextAlert from '../components/ContextAlert.astro';
import { getCollection, type CollectionEntry } from 'astro:content';

type PageEntry = CollectionEntry<'pages'>;
interface FormattedPage {
    data: {
        title: string;
        description?: string;
        lastUpdated?: Date;
        order?: number;
        featured?: boolean;
    };
    slug: string;
    formattedDate: string;
}

// Get all pages
const allPages = await getCollection('pages');

// Get the home page content
const homePage = allPages.find((page: PageEntry) => page.slug === 'home');
const homeContent = homePage ? await homePage.render() : null;

// Extract topics from directory structure
const topicsMap = new Map<string, Set<string>>();

// Process pages for topics
allPages.forEach((page: PageEntry) => {
    const pathParts = page.slug.split('/');

    if (pathParts.length > 0) {
        const topic = pathParts[0];
        if (topic === 'home') return;

        const subtopic = pathParts.length > 1 ? pathParts[1] : null;

        if (!topicsMap.has(topic)) {
            topicsMap.set(topic, new Set<string>());
        }

        if (subtopic) {
            topicsMap.get(topic)?.add(subtopic);
        }
    }
});

// Convert the Map to an array of objects for easier template rendering
const topics = Array.from(topicsMap.entries()).map(([topicName, subtopics]) => ({
    name: topicName,
    subtopics: Array.from(subtopics)
}));

// Featured pages (if any)
const featuredPages = allPages.filter((page: PageEntry) => page.data.featured && page.slug !== 'home');

// Format featured pages with dates
const formattedFeaturedPages: FormattedPage[] = featuredPages.map((page: PageEntry) => ({
    ...page,
    formattedDate:
        page.data.lastUpdated instanceof Date
            ? page.data.lastUpdated.toLocaleDateString('en-US', {
                  year: 'numeric',
                  month: 'long',
                  day: 'numeric'
              })
            : 'Date not available'
}));
---

<Layout title="ThaiDreams" description="Your ultimate guide to Thailand for digital nomads">
    <div class="container mx-auto px-4 py-8">
        <ContextAlert message="Follow two quirky digital nomads through their adventures in Thailand!" class="mb-8" />

        <!-- Featured Pages Section -->
        {
            featuredPages.length > 0 && (
                <div class="mb-12">
                    <h2 class="mb-4">Featured Content</h2>
                    <div class="grid grid-cols-1 gap-6 md:grid-cols-2 lg:grid-cols-3">
                        {formattedFeaturedPages.map((page) => (
                            <div class="p-6 bg-white rounded-lg shadow-md">
                                <h3 class="mb-2 text-xl font-semibold text-gray-800">{page.data.title}</h3>
                                <p class="mb-4 text-gray-600">{page.data.description}</p>
                                <div class="flex items-center justify-between">
                                    <span class="text-sm text-gray-500">{page.formattedDate}</span>
                                    <a href={`/${page.slug}`} class="text-blue-500 hover:underline">
                                        Read more â†’
                                    </a>
                                </div>
                            </div>
                        ))}
                    </div>
                </div>
            )
        }

        <!-- Topics Section -->
        <div class="grid grid-cols-1 gap-8 md:grid-cols-2 lg:grid-cols-3">
            {
                topics.map((topic) => (
                    <div class="p-6 bg-white rounded-lg shadow-md">
                        <h2 class="mb-4 text-xl font-semibold text-gray-800 capitalize">{topic.name.replace(/-/g, ' ')}</h2>
                        {topic.subtopics.length > 0 ? (
                            <ul class="space-y-2">
                                {topic.subtopics.map((subtopic) => (
                                    <li>
                                        <a href={`/${topic.name}/${subtopic}`} class="text-blue-500 hover:underline capitalize">
                                            {subtopic.replace(/-/g, ' ')}
                                        </a>
                                    </li>
                                ))}
                            </ul>
                        ) : (
                            <p class="text-gray-600">No subcategories found.</p>
                        )}
                    </div>
                ))
            }
        </div>

        {
            homeContent && (
                <div class="mt-12 markdown-content">
                    <homeContent.Content />
                </div>
            )
        }
    </div>
</Layout>
